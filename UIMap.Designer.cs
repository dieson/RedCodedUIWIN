// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Test
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITest.Input;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WindowsRuntimeControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public partial class UIMap
    {
        
        #region Properties
        public UILexisNexisRedWindow UILexisNexisRedWindow
        {
            get
            {
                if ((this.mUILexisNexisRedWindow == null))
                {
                    this.mUILexisNexisRedWindow = new UILexisNexisRedWindow();
                }
                return this.mUILexisNexisRedWindow;
            }
        }
        
        public UILexisRedWindow UILexisRedWindow
        {
            get
            {
                if ((this.mUILexisRedWindow == null))
                {
                    this.mUILexisRedWindow = new UILexisRedWindow();
                }
                return this.mUILexisRedWindow;
            }
        }
        #endregion
        
        #region Fields
        private UILexisNexisRedWindow mUILexisNexisRedWindow;
        
        private UILexisRedWindow mUILexisRedWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UILexisNexisRedWindow : XamlWindow
    {
        
        public UILexisNexisRedWindow()
        {
            #region Search Criteria
            this.SearchProperties[XamlControl.PropertyNames.Name] = "LexisNexis Red";
            this.SearchProperties[XamlControl.PropertyNames.ClassName] = "Windows.UI.Core.CoreWindow";
            this.WindowTitles.Add("LexisNexis Red");
            #endregion
        }
        
        #region Properties
        public XamlEdit UIPasswordBoxEdit
        {
            get
            {
                if ((this.mUIPasswordBoxEdit == null))
                {
                    this.mUIPasswordBoxEdit = new XamlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordBoxEdit.SearchProperties[XamlEdit.PropertyNames.AutomationId] = "PasswordBox";
                    this.mUIPasswordBoxEdit.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIPasswordBoxEdit;
            }
        }
        
        public XamlEdit UIEmailTextBoxEdit
        {
            get
            {
                if ((this.mUIEmailTextBoxEdit == null))
                {
                    this.mUIEmailTextBoxEdit = new XamlEdit(this);
                    #region Search Criteria
                    this.mUIEmailTextBoxEdit.SearchProperties[XamlEdit.PropertyNames.AutomationId] = "EmailTextBox";
                    this.mUIEmailTextBoxEdit.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIEmailTextBoxEdit;
            }
        }
        
        public XamlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "LoginButton";
                    this.mUILoginButton.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        
        public UIPopupWindow UIPopupWindow
        {
            get
            {
                if ((this.mUIPopupWindow == null))
                {
                    this.mUIPopupWindow = new UIPopupWindow(this);
                }
                return this.mUIPopupWindow;
            }
        }
        
        public XamlButton UISignOutButton
        {
            get
            {
                if ((this.mUISignOutButton == null))
                {
                    this.mUISignOutButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUISignOutButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "SignOut";
                    this.mUISignOutButton.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUISignOutButton;
            }
        }
        
        public XamlText UISigninwithyourLexisNText
        {
            get
            {
                if ((this.mUISigninwithyourLexisNText == null))
                {
                    this.mUISigninwithyourLexisNText = new XamlText(this);
                    #region Search Criteria
                    this.mUISigninwithyourLexisNText.SearchProperties[XamlText.PropertyNames.Name] = "Sign in with your LexisNexis account.";
                    this.mUISigninwithyourLexisNText.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUISigninwithyourLexisNText;
            }
        }
        
        public XamlComboBox UICountryBoxComboBox
        {
            get
            {
                if ((this.mUICountryBoxComboBox == null))
                {
                    this.mUICountryBoxComboBox = new XamlComboBox(this);
                    #region Search Criteria
                    this.mUICountryBoxComboBox.SearchProperties[XamlComboBox.PropertyNames.AutomationId] = "CountryBox";
                    this.mUICountryBoxComboBox.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUICountryBoxComboBox;
            }
        }
        
        public UIItemPane UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new UIItemPane(this);
                }
                return this.mUIItemPane;
            }
        }
        
        public UIPublicationItemsList UIPublicationItemsList
        {
            get
            {
                if ((this.mUIPublicationItemsList == null))
                {
                    this.mUIPublicationItemsList = new UIPublicationItemsList(this);
                }
                return this.mUIPublicationItemsList;
            }
        }
        
        public XamlButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "CancelButton";
                    this.mUICancelButton.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        
        public XamlButton UISettingsButton
        {
            get
            {
                if ((this.mUISettingsButton == null))
                {
                    this.mUISettingsButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUISettingsButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "Settings";
                    this.mUISettingsButton.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUISettingsButton;
            }
        }
        
        public UITopNavMenuListList UITopNavMenuListList
        {
            get
            {
                if ((this.mUITopNavMenuListList == null))
                {
                    this.mUITopNavMenuListList = new UITopNavMenuListList(this);
                }
                return this.mUITopNavMenuListList;
            }
        }
        
        public UITOCListList UITOCListList
        {
            get
            {
                if ((this.mUITOCListList == null))
                {
                    this.mUITOCListList = new UITOCListList(this);
                }
                return this.mUITOCListList;
            }
        }
        
        public UIContentWebViewPane UIContentWebViewPane
        {
            get
            {
                if ((this.mUIContentWebViewPane == null))
                {
                    this.mUIContentWebViewPane = new UIContentWebViewPane(this);
                }
                return this.mUIContentWebViewPane;
            }
        }
        
        public XamlButton UIMenuBack
        {
            get
            {
                if ((this.mUIMenuBack == null))
                {
                    this.mUIMenuBack = new XamlButton(this);
                    #region Search Criteria
                    this.mUIMenuBack.SearchProperties[XamlButton.PropertyNames.AutomationId] = "BackWard";
                    this.mUIMenuBack.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIMenuBack;
            }
        }
        
        public XamlButton UIMenuForward
        {
            get
            {
                if ((this.mUIMenuForward == null))
                {
                    this.mUIMenuForward = new XamlButton(this);
                    #region Search Criteria
                    this.mUIMenuForward.SearchProperties[XamlButton.PropertyNames.AutomationId] = "ForWard";
                    this.mUIMenuForward.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIMenuForward;
            }
        }
        
        public UISettingMenuList UISettingMenuList
        {
            get
            {
                if ((this.mUISettingMenuList == null))
                {
                    this.mUISettingMenuList = new UISettingMenuList(this);
                }
                return this.mUISettingMenuList;
            }
        }
        
        public XamlHyperlink UIContactUsHyperlink
        {
            get
            {
                if ((this.mUIContactUsHyperlink == null))
                {
                    this.mUIContactUsHyperlink = new XamlHyperlink(this);
                    #region Search Criteria
                    this.mUIContactUsHyperlink.SearchProperties[XamlHyperlink.PropertyNames.Name] = "Contact Us";
                    this.mUIContactUsHyperlink.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIContactUsHyperlink;
            }
        }
        
        public XamlText UIItem1800999906Text
        {
            get
            {
                if ((this.mUIItem1800999906Text == null))
                {
                    this.mUIItem1800999906Text = new XamlText(this);
                    #region Search Criteria
                    this.mUIItem1800999906Text.SearchProperties[XamlText.PropertyNames.Name] = "1800 999 906";
                    this.mUIItem1800999906Text.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIItem1800999906Text;
            }
        }
        
        public XamlText UIItem61294222174Text
        {
            get
            {
                if ((this.mUIItem61294222174Text == null))
                {
                    this.mUIItem61294222174Text = new XamlText(this);
                    #region Search Criteria
                    this.mUIItem61294222174Text.SearchProperties[XamlText.PropertyNames.Name] = "+61 2 9422 2174";
                    this.mUIItem61294222174Text.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIItem61294222174Text;
            }
        }
        
        public XamlText UIEmailText
        {
            get
            {
                if ((this.mUIEmailText == null))
                {
                    this.mUIEmailText = new XamlText(this);
                    #region Search Criteria
                    this.mUIEmailText.SearchProperties[XamlText.PropertyNames.Name] = "Email";
                    this.mUIEmailText.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIEmailText;
            }
        }
        
        public XamlText UIItem0294222405Text
        {
            get
            {
                if ((this.mUIItem0294222405Text == null))
                {
                    this.mUIItem0294222405Text = new XamlText(this);
                    #region Search Criteria
                    this.mUIItem0294222405Text.SearchProperties[XamlText.PropertyNames.Name] = "02 9422 2405";
                    this.mUIItem0294222405Text.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIItem0294222405Text;
            }
        }
        
        public XamlButton UIBackButton
        {
            get
            {
                if ((this.mUIBackButton == null))
                {
                    this.mUIBackButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIBackButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "BackButton";
                    this.mUIBackButton.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIBackButton;
            }
        }
        
        public XamlEdit UISearchTextBoxEdit
        {
            get
            {
                if ((this.mUISearchTextBoxEdit == null))
                {
                    this.mUISearchTextBoxEdit = new XamlEdit(this);
                    #region Search Criteria
                    this.mUISearchTextBoxEdit.SearchProperties[XamlEdit.PropertyNames.AutomationId] = "SearchTextBox";
                    this.mUISearchTextBoxEdit.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUISearchTextBoxEdit;
            }
        }
        
        public UIPopupWindow1 UIPopupWindow1
        {
            get
            {
                if ((this.mUIPopupWindow1 == null))
                {
                    this.mUIPopupWindow1 = new UIPopupWindow1(this);
                }
                return this.mUIPopupWindow1;
            }
        }
        
        public XamlButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "SearchButtonClick";
                    this.mUIItemButton.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private XamlEdit mUIPasswordBoxEdit;
        
        private XamlEdit mUIEmailTextBoxEdit;
        
        private XamlButton mUILoginButton;
        
        private UIPopupWindow mUIPopupWindow;
        
        private XamlButton mUISignOutButton;
        
        private XamlText mUISigninwithyourLexisNText;
        
        private XamlComboBox mUICountryBoxComboBox;
        
        private UIItemPane mUIItemPane;
        
        private UIPublicationItemsList mUIPublicationItemsList;
        
        private XamlButton mUICancelButton;
        
        private XamlButton mUISettingsButton;
        
        private UITopNavMenuListList mUITopNavMenuListList;
        
        private UITOCListList mUITOCListList;
        
        private UIContentWebViewPane mUIContentWebViewPane;
        
        private XamlButton mUIMenuBack;
        
        private XamlButton mUIMenuForward;
        
        private UISettingMenuList mUISettingMenuList;
        
        private XamlHyperlink mUIContactUsHyperlink;
        
        private XamlText mUIItem1800999906Text;
        
        private XamlText mUIItem61294222174Text;
        
        private XamlText mUIEmailText;
        
        private XamlText mUIItem0294222405Text;
        
        private XamlButton mUIBackButton;
        
        private XamlEdit mUISearchTextBoxEdit;
        
        private UIPopupWindow1 mUIPopupWindow1;
        
        private XamlButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIPopupWindow : XamlWindow
    {
        
        public UIPopupWindow(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[XamlControl.PropertyNames.Name] = "Popup";
            this.WindowTitles.Add("LexisNexis Red");
            #endregion
        }
        
        #region Properties
        public XamlText UIInvalidLoginInfoText
        {
            get
            {
                if ((this.mUIInvalidLoginInfoText == null))
                {
                    this.mUIInvalidLoginInfoText = new XamlText(this);
                    #region Search Criteria
                    this.mUIInvalidLoginInfoText.SearchProperties[XamlText.PropertyNames.AutomationId] = "messageTextBlock";
                    this.mUIInvalidLoginInfoText.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIInvalidLoginInfoText;
            }
        }
        
        public XamlButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "OK";
                    this.mUIOKButton.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public XamlButton UIConfirmButton
        {
            get
            {
                if ((this.mUIConfirmButton == null))
                {
                    this.mUIConfirmButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIConfirmButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "Confirm";
                    this.mUIConfirmButton.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIConfirmButton;
            }
        }
        #endregion
        
        #region Fields
        private XamlText mUIInvalidLoginInfoText;
        
        private XamlButton mUIOKButton;
        
        private XamlButton mUIConfirmButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemPane : XamlControl
    {
        
        public UIItemPane(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "ScrollViewer";
            this.WindowTitles.Add("LexisNexis Red");
            #endregion
        }
        
        #region Properties
        public XamlList UIPublicationItemsList
        {
            get
            {
                if ((this.mUIPublicationItemsList == null))
                {
                    this.mUIPublicationItemsList = new XamlList(this);
                    #region Search Criteria
                    this.mUIPublicationItemsList.SearchProperties[XamlList.PropertyNames.AutomationId] = "PublicationItems";
                    this.mUIPublicationItemsList.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIPublicationItemsList;
            }
        }
        
        public XamlList UIPublicationsCollectiList
        {
            get
            {
                if ((this.mUIPublicationsCollectiList == null))
                {
                    this.mUIPublicationsCollectiList = new XamlList(this);
                    #region Search Criteria
                    this.mUIPublicationsCollectiList.SearchProperties[XamlList.PropertyNames.AutomationId] = "PublicationsCollection";
                    this.mUIPublicationsCollectiList.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIPublicationsCollectiList;
            }
        }
        
        public XamlRadioButton UIAllRadioAll
        {
            get
            {
                if ((this.mUIAllRadioAll == null))
                {
                    this.mUIAllRadioAll = new XamlRadioButton(this);
                    #region Search Criteria
                    this.mUIAllRadioAll.SearchProperties[XamlRadioButton.PropertyNames.Name] = "All";
                    this.mUIAllRadioAll.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIAllRadioAll;
            }
        }
        
        public XamlRadioButton UILoanRadioButton
        {
            get
            {
                if ((this.mUILoanRadioButton == null))
                {
                    this.mUILoanRadioButton = new XamlRadioButton(this);
                    #region Search Criteria
                    this.mUILoanRadioButton.SearchProperties[XamlRadioButton.PropertyNames.Name] = "Loan";
                    this.mUILoanRadioButton.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUILoanRadioButton;
            }
        }
        
        public XamlRadioButton UISubscriptionRadioButton
        {
            get
            {
                if ((this.mUISubscriptionRadioButton == null))
                {
                    this.mUISubscriptionRadioButton = new XamlRadioButton(this);
                    #region Search Criteria
                    this.mUISubscriptionRadioButton.SearchProperties[XamlRadioButton.PropertyNames.Name] = "Subscription";
                    this.mUISubscriptionRadioButton.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUISubscriptionRadioButton;
            }
        }
        
        public XamlList UIRecentHistoryItemsList
        {
            get
            {
                if ((this.mUIRecentHistoryItemsList == null))
                {
                    this.mUIRecentHistoryItemsList = new XamlList(this);
                    #region Search Criteria
                    this.mUIRecentHistoryItemsList.SearchProperties[XamlList.PropertyNames.AutomationId] = "RecentHistoryItems";
                    this.mUIRecentHistoryItemsList.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIRecentHistoryItemsList;
            }
        }
        
        public XamlText UIStatutoryInterpretatText
        {
            get
            {
                if ((this.mUIStatutoryInterpretatText == null))
                {
                    this.mUIStatutoryInterpretatText = new XamlText(this);
                    #region Search Criteria
                    this.mUIStatutoryInterpretatText.SearchProperties[XamlText.PropertyNames.Name] = "Statutory Interpretation in Australia";
                    this.mUIStatutoryInterpretatText.SearchProperties[XamlText.PropertyNames.Instance] = "2";
                    this.mUIStatutoryInterpretatText.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIStatutoryInterpretatText;
            }
        }
        
        public XamlButton UIOpenButton
        {
            get
            {
                if ((this.mUIOpenButton == null))
                {
                    this.mUIOpenButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIOpenButton.SearchProperties[XamlButton.PropertyNames.Name] = "Open";
                    this.mUIOpenButton.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIOpenButton;
            }
        }
        
        public XamlText UILOANText
        {
            get
            {
                if ((this.mUILOANText == null))
                {
                    this.mUILOANText = new XamlText(this);
                    #region Search Criteria
                    this.mUILOANText.SearchProperties[XamlText.PropertyNames.Name] = "LOAN";
                    this.mUILOANText.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUILOANText;
            }
        }
        #endregion
        
        #region Fields
        private XamlList mUIPublicationItemsList;
        
        private XamlList mUIPublicationsCollectiList;
        
        private XamlRadioButton mUIAllRadioAll;
        
        private XamlRadioButton mUILoanRadioButton;
        
        private XamlRadioButton mUISubscriptionRadioButton;
        
        private XamlList mUIRecentHistoryItemsList;
        
        private XamlText mUIStatutoryInterpretatText;
        
        private XamlButton mUIOpenButton;
        
        private XamlText mUILOANText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIPublicationItemsList : XamlList
    {
        
        public UIPublicationItemsList(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[XamlList.PropertyNames.AutomationId] = "PublicationItems";
            this.WindowTitles.Add("LexisNexis Red");
            #endregion
        }
        
        #region Properties
        public UILexisNexisRedWindowsListItem UILexisNexisRedWindowsListItem
        {
            get
            {
                if ((this.mUILexisNexisRedWindowsListItem == null))
                {
                    this.mUILexisNexisRedWindowsListItem = new UILexisNexisRedWindowsListItem(this);
                }
                return this.mUILexisNexisRedWindowsListItem;
            }
        }
        #endregion
        
        #region Fields
        private UILexisNexisRedWindowsListItem mUILexisNexisRedWindowsListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UILexisNexisRedWindowsListItem : XamlListItem
    {
        
        public UILexisNexisRedWindowsListItem(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[XamlListItem.PropertyNames.Name] = "LexisNexis.Red.WindowsStore.ViewModels.PublicationViewModel";
            this.WindowTitles.Add("LexisNexis Red");
            #endregion
        }
        
        #region Properties
        public XamlButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "DownloadCommand";
                    this.mUIItemButton.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private XamlButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITopNavMenuListList : XamlList
    {
        
        public UITopNavMenuListList(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[XamlList.PropertyNames.AutomationId] = "TopNavMenuList";
            this.WindowTitles.Add("LexisNexis Red");
            #endregion
        }
        
        #region Properties
        public XamlListItem UILexisNexisRedWindowsListItem
        {
            get
            {
                if ((this.mUILexisNexisRedWindowsListItem == null))
                {
                    this.mUILexisNexisRedWindowsListItem = new XamlListItem(this);
                    #region Search Criteria
                    this.mUILexisNexisRedWindowsListItem.SearchProperties[XamlListItem.PropertyNames.AutomationId] = "NavMenuItem";
                    this.mUILexisNexisRedWindowsListItem.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUILexisNexisRedWindowsListItem;
            }
        }
        #endregion
        
        #region Fields
        private XamlListItem mUILexisNexisRedWindowsListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITOCListList : XamlList
    {
        
        public UITOCListList(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[XamlList.PropertyNames.AutomationId] = "TOCList";
            this.WindowTitles.Add("LexisNexis Red");
            #endregion
        }
        
        #region Properties
        public XamlListItem UILexisNexisRedWindowsListItem
        {
            get
            {
                if ((this.mUILexisNexisRedWindowsListItem == null))
                {
                    this.mUILexisNexisRedWindowsListItem = new XamlListItem(this);
                    #region Search Criteria
                    this.mUILexisNexisRedWindowsListItem.SearchProperties[XamlListItem.PropertyNames.Name] = "LexisNexis.Red.WindowsStore.ViewModels.BreadcrumbNav";
                    this.mUILexisNexisRedWindowsListItem.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUILexisNexisRedWindowsListItem;
            }
        }
        #endregion
        
        #region Fields
        private XamlListItem mUILexisNexisRedWindowsListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIContentWebViewPane : XamlControl
    {
        
        public UIContentWebViewPane(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "WebView";
            this.SearchProperties["AutomationId"] = "ContentWebView";
            this.WindowTitles.Add("LexisNexis Red");
            #endregion
        }
        
        #region Properties
        public UIAboutblankPane UIAboutblankPane
        {
            get
            {
                if ((this.mUIAboutblankPane == null))
                {
                    this.mUIAboutblankPane = new UIAboutblankPane(this);
                }
                return this.mUIAboutblankPane;
            }
        }
        #endregion
        
        #region Fields
        private UIAboutblankPane mUIAboutblankPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIAboutblankPane : XamlWebView
    {
        
        public UIAboutblankPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[XamlWebView.PropertyNames.ClassName] = "Internet Explorer_Server";
            this.SearchProperties[XamlWebView.PropertyNames.Name] = "about:blank";
            this.WindowTitles.Add("LexisNexis Red");
            #endregion
        }
        
        #region Properties
        public UIAboutblankDocument UIAboutblankDocument
        {
            get
            {
                if ((this.mUIAboutblankDocument == null))
                {
                    this.mUIAboutblankDocument = new UIAboutblankDocument(this);
                }
                return this.mUIAboutblankDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAboutblankDocument mUIAboutblankDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIAboutblankDocument : HtmlDocument
    {
        
        public UIAboutblankDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "blank";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "about:blank";
            this.WindowTitles.Add("LexisNexis Red");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIMainbodyPane
        {
            get
            {
                if ((this.mUIMainbodyPane == null))
                {
                    this.mUIMainbodyPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMainbodyPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "mainbody";
                    this.mUIMainbodyPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMainbodyPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "﻿﻿\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nCRIM";
                    this.mUIMainbodyPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMainbodyPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "nomargin";
                    this.mUIMainbodyPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"nomargin\" id=\"mainbody\"";
                    this.mUIMainbodyPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIMainbodyPane.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIMainbodyPane;
            }
        }
        
        public UITocId16Pane UITocId16Pane
        {
            get
            {
                if ((this.mUITocId16Pane == null))
                {
                    this.mUITocId16Pane = new UITocId16Pane(this);
                }
                return this.mUITocId16Pane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIMainbodyPane;
        
        private UITocId16Pane mUITocId16Pane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITocId16Pane : HtmlDiv
    {
        
        public UITocId16Pane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "tocId16";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "﻿﻿\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nChap";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "layouttoc";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"layouttoc\" id=\"tocId16\" style=\"margin-bottom: 10px; max-width: 720px;\">﻿﻿d" +
                "iv";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
            this.WindowTitles.Add("LexisNexis Red");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIChapter3NotificationPane
        {
            get
            {
                if ((this.mUIChapter3NotificationPane == null))
                {
                    this.mUIChapter3NotificationPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIChapter3NotificationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIChapter3NotificationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIChapter3NotificationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Chapter 3 Notification Required under FA";
                    this.mUIChapter3NotificationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIChapter3NotificationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "title";
                    this.mUIChapter3NotificationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"title\"";
                    this.mUIChapter3NotificationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "20";
                    this.mUIChapter3NotificationPane.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIChapter3NotificationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIChapter3NotificationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UISettingMenuList : XamlList
    {
        
        public UISettingMenuList(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[XamlList.PropertyNames.AutomationId] = "SettingMenu";
            this.WindowTitles.Add("LexisNexis Red");
            #endregion
        }
        
        #region Properties
        public XamlListItem UIItemHelp
        {
            get
            {
                if ((this.mUIItemHelp == null))
                {
                    this.mUIItemHelp = new XamlListItem(this);
                    #region Search Criteria
                    this.mUIItemHelp.SearchProperties[XamlListItem.PropertyNames.Instance] = "2";
                    this.mUIItemHelp.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUIItemHelp;
            }
        }
        #endregion
        
        #region Fields
        private XamlListItem mUIItemHelp;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIPopupWindow1 : XamlWindow
    {
        
        public UIPopupWindow1(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[XamlControl.PropertyNames.AutomationId] = "SearchResultPopup";
            this.WindowTitles.Add("LexisNexis Red");
            #endregion
        }
        
        #region Properties
        public XamlList UISearchListList
        {
            get
            {
                if ((this.mUISearchListList == null))
                {
                    this.mUISearchListList = new XamlList(this);
                    #region Search Criteria
                    this.mUISearchListList.SearchProperties[XamlList.PropertyNames.AutomationId] = "SearchList";
                    this.mUISearchListList.WindowTitles.Add("LexisNexis Red");
                    #endregion
                }
                return this.mUISearchListList;
            }
        }
        #endregion
        
        #region Fields
        private XamlList mUISearchListList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UILexisRedWindow : XamlWindow
    {
        
        public UILexisRedWindow()
        {
            #region Search Criteria
            this.SearchProperties[XamlControl.PropertyNames.Name] = "Lexis Red";
            this.SearchProperties[XamlControl.PropertyNames.ClassName] = "Windows.UI.Core.CoreWindow";
            this.WindowTitles.Add("Lexis Red");
            #endregion
        }
        
        #region Properties
        public XamlCheckBox UIRememberpasswordCheckBox
        {
            get
            {
                if ((this.mUIRememberpasswordCheckBox == null))
                {
                    this.mUIRememberpasswordCheckBox = new XamlCheckBox(this);
                    #region Search Criteria
                    this.mUIRememberpasswordCheckBox.SearchProperties[XamlCheckBox.PropertyNames.Name] = "Remember password";
                    this.mUIRememberpasswordCheckBox.WindowTitles.Add("Lexis Red");
                    #endregion
                }
                return this.mUIRememberpasswordCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private XamlCheckBox mUIRememberpasswordCheckBox;
        #endregion
    }
}
